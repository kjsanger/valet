
name: "Create release"
on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l -e -o pipefail {0}

    env:
      WSI_CONDA_CHANNEL: "https://dnap.cog.sanger.ac.uk/npg/conda/devel/generic"
      CONDA_TEST_ENVIRONMENT: "testenv"

    strategy:
      matrix:
        include:
          - client_bundle: https://github.com/wtsi-npg/containers/releases/download/5.2/bundle-ub-16.04-irods-clients-4.2.7.tgz
            server_image: "ghcr.io/wtsi-npg/ub-16.04-irods-4.2.7:latest"

    services:
      irods:
        image: ${{ matrix.server_image }}
        ports:
          - 1247:1247

    steps:
      - uses: actions/checkout@v4

      - name: "Set up Go ${{ matrix.go }}"
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: "Cache Go modules"
        uses: actions/cache@v4
        with:
          path: |
            "$HOME/go/pkg/mod"
            "$HOME/.cache/go-build"
          key: ${{ runner.os }}-key1-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-key1-go-

      - name: "Build distribution"
        run: |
          conda activate "$CONDA_TEST_ENVIRONMENT"
          make dist

      - name: "Get release version"
        run: |
          git status
          version=$(git describe --always --tags --dirty)
          echo "$version" | grep dirty && git diff

          echo VALET_VERSION="version" >> $GITHUB_ENV

      - name: "Get master shasum"
        run: |
          echo MASTER_SHA=$(git rev-parse origin/master) >> $GITHUB_ENV

      - name: "Create release"
        uses: ncipollo/release-action@v1.14.0
        with:
          name: ${{ env.VALET_VERSION }}
          prerelease: ${{ !(github.sha == env.MASTER_SHA) }}
          artifacts: "*.tar.bz2,*.tar.bz2.sha256"
          removeArtifacts: true
          artifactErrorsFailBuild: true
          generateReleaseNotes: true
